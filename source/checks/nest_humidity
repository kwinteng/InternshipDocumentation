#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-


# Pulls values from the <<<nest_humidity>>> section of the special agent
# "agent_nest" in the same checks directory

# Creates humidity checks for all reported thermostats

# Default is 50% humidity. Like the temperature, warning and critical
# values are 10% and 15% beyond the default

nest_humidity_default_levels = (35, 40, 60, 65)

# line[0].find("Thermostat") != -1 is needed to not take the others into account (Protect and Structure)
def nest_humidity_parse(info):
    thermostats = {}
    for line in info:
        if line[0].startswith('[') and line[0].find("Thermostat") != -1:
            name = line[0][1:-1]
            thermostat = {}
            thermostats[name] = thermostat
        else:
            key, value = line
            if key in ["humidity" ]:
                value = int(value)			
                thermostat[key] = value
    return thermostats

def inventory_nest_humidity(info):
    thermostats = nest_humidity_parse(info)
    return [ (name, {}, "nest_humidity_default_levels") for name in thermostats ]

def check_nest_humidity(item, params, info):

    critlow, warnlow, warnhigh, crithigh = params

    # set warn and crit as both values, low and high, separated by colon
    # perfdata and PNP4Nagios should pick this up

    warn = "%d:%d" % (warnlow, warnhigh)
    crit = "%d:%d" % (critlow, crithigh)
    
    # Process inventory for datasource check
    thermostats = nest_thermostat_parse(info)
    thermostat = thermostats[item]
    
    infotext = ""
    humidity = 0

    humidity = int(thermostat["humidity"])
    infotext += "%d%% RH" % humidity
    perfdata = [ ("humidity", humidity, warn, crit) ]

    if humidity <= critlow or humidity >= crithigh:
        return (2, "CRITICAL - Humidity is %s" % infotext, perfdata)
    if humidity <= warnlow or humidity >= warnhigh:
        return (1, "WARNING - Humidity is %s" % infotext, perfdata)
    else:
        return (0, "OK - Humidity is %s" % infotext, perfdata)

check_info["nest_humidity"] = {
    'check_function':        check_nest_humidity,
    'inventory_function':    inventory_nest_humidity,
    'service_description':   'Humidity %s',
    'group':                 'nest_humidity',
    'has_perfdata':          True,
}

